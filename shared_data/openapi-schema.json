{
  "components": {
    "responses": {
      "errors": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/errors"
            }
          }
        },
        "description": "General Error"
      }
    },
    "schemas": {
      "knowledge_resource-filter": {
        "additionalProperties": false,
        "description": "Filters the query to results matching the given filter object",
        "example": "",
        "properties": {
          "and": {
            "items": {
              "$ref": "#/components/schemas/knowledge_resource-filter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "course": {
            "$ref": "#/components/schemas/course-filter"
          },
          "course_id": {
            "$ref": "#/components/schemas/knowledge_resource-filter-course_id"
          },
          "created_by": {
            "$ref": "#/components/schemas/user-filter"
          },
          "created_by_id": {
            "$ref": "#/components/schemas/knowledge_resource-filter-created_by_id"
          },
          "description": {
            "$ref": "#/components/schemas/knowledge_resource-filter-description"
          },
          "id": {
            "$ref": "#/components/schemas/knowledge_resource-filter-id"
          },
          "incoming_relations": {
            "$ref": "#/components/schemas/knowledge_relation-filter"
          },
          "name": {
            "$ref": "#/components/schemas/knowledge_resource-filter-name"
          },
          "not": {
            "$ref": "#/components/schemas/knowledge_resource-filter"
          },
          "or": {
            "items": {
              "$ref": "#/components/schemas/knowledge_resource-filter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "outgoing_relations": {
            "$ref": "#/components/schemas/knowledge_relation-filter"
          }
        },
        "type": "deepObject"
      },
      "course_enrollment": {
        "additionalProperties": false,
        "description": "A \"Resource object\" representing a course_enrollment",
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "description": "An attributes object for a course_enrollment",
            "properties": {
              "course_id": {
                "description": "Field included by default.",
                "format": "uuid",
                "type": "string"
              },
              "enrolled_at": {
                "description": "Field included by default.",
                "format": "date-time",
                "type": "string"
              },
              "student_id": {
                "description": "Field included by default.",
                "format": "uuid",
                "type": "string"
              }
            },
            "required": [
              "course_id",
              "student_id",
              "enrolled_at"
            ],
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "additionalProperties": false,
            "description": "A relationships object for a course_enrollment",
            "properties": {},
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "id"
        ],
        "type": "object"
      },
      "course-filter-title": {
        "additionalProperties": false,
        "properties": {
          "contains": {
            "type": "string"
          },
          "eq": {
            "type": "string"
          },
          "greater_than": {
            "type": "string"
          },
          "greater_than_or_equal": {
            "type": "string"
          },
          "ilike": {
            "type": "string"
          },
          "in": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "type": "string"
          },
          "less_than_or_equal": {
            "type": "string"
          },
          "like": {
            "type": "string"
          },
          "not_eq": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "user-filter-id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "links": {
        "additionalProperties": {
          "$ref": "#/components/schemas/link"
        },
        "type": "object"
      },
      "user-filter": {
        "additionalProperties": false,
        "description": "Filters the query to results matching the given filter object",
        "example": "",
        "properties": {
          "and": {
            "items": {
              "$ref": "#/components/schemas/user-filter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "email": {
            "$ref": "#/components/schemas/user-filter-email"
          },
          "id": {
            "$ref": "#/components/schemas/user-filter-id"
          },
          "not": {
            "$ref": "#/components/schemas/user-filter"
          },
          "or": {
            "items": {
              "$ref": "#/components/schemas/user-filter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "role": {
            "$ref": "#/components/schemas/user-filter-role"
          },
          "student_id": {
            "$ref": "#/components/schemas/user-filter-student_id"
          }
        },
        "type": "deepObject"
      },
      "course": {
        "additionalProperties": false,
        "description": "A \"Resource object\" representing a course",
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "description": "An attributes object for a course",
            "properties": {
              "description": {
                "anyOf": [
                  {
                    "nullable": true,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Field included by default."
              },
              "teacher_id": {
                "description": "Field included by default.",
                "format": "uuid",
                "type": "string"
              },
              "title": {
                "description": "Field included by default.",
                "type": "string"
              }
            },
            "required": [
              "title",
              "teacher_id"
            ],
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "additionalProperties": false,
            "description": "A relationships object for a course",
            "properties": {},
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "id"
        ],
        "type": "object"
      },
      "knowledge_resource": {
        "additionalProperties": false,
        "description": "A \"Resource object\" representing a knowledge_resource",
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "description": "An attributes object for a knowledge_resource",
            "properties": {
              "course_id": {
                "description": "Field included by default.",
                "format": "uuid",
                "type": "string"
              },
              "created_by_id": {
                "anyOf": [
                  {
                    "format": "uuid",
                    "nullable": true,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Field included by default."
              },
              "description": {
                "anyOf": [
                  {
                    "nullable": true,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Field included by default."
              },
              "name": {
                "description": "Field included by default.",
                "type": "string"
              }
            },
            "required": [
              "name",
              "course_id"
            ],
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "additionalProperties": false,
            "description": "A relationships object for a knowledge_resource",
            "properties": {
              "course": {
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "description": "An identifier for course",
                    "nullable": true,
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "meta": {
                        "additionalProperties": true,
                        "type": "object"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ],
                    "type": "object"
                  }
                }
              },
              "created_by": {
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "description": "An identifier for created_by",
                    "nullable": true,
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "meta": {
                        "additionalProperties": true,
                        "type": "object"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ],
                    "type": "object"
                  }
                }
              },
              "incoming_relations": {
                "properties": {
                  "data": {
                    "description": "Relationship data for incoming_relations",
                    "items": {
                      "additionalProperties": false,
                      "description": "Resource identifiers for incoming_relations",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "meta": {
                          "additionalProperties": true,
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                }
              },
              "outgoing_relations": {
                "properties": {
                  "data": {
                    "description": "Relationship data for outgoing_relations",
                    "items": {
                      "additionalProperties": false,
                      "description": "Resource identifiers for outgoing_relations",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "meta": {
                          "additionalProperties": true,
                          "type": "object"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                }
              }
            },
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "id"
        ],
        "type": "object"
      },
      "course_enrollment-filter-enrolled_at": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "date-time",
            "type": "string"
          },
          "greater_than": {
            "format": "date-time",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "date-time",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "date-time",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "date-time",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "date-time",
            "type": "string"
          },
          "not_eq": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "knowledge_relation-filter-source_knowledge_id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "course_enrollment-filter-student_id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "link": {
        "description": "A link MUST be represented as either: a string containing the link's URL or a link object.",
        "type": "string"
      },
      "knowledge_relation": {
        "additionalProperties": false,
        "description": "A \"Resource object\" representing a knowledge_relation",
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "description": "An attributes object for a knowledge_relation",
            "properties": {
              "created_by_id": {
                "anyOf": [
                  {
                    "format": "uuid",
                    "nullable": true,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Field included by default."
              },
              "relation_type": {
                "description": "Field included by default.",
                "enum": [
                  "pre",
                  "post",
                  "related",
                  "extends",
                  "depends_on"
                ],
                "type": "string"
              },
              "source_knowledge_id": {
                "description": "Field included by default.",
                "format": "uuid",
                "type": "string"
              },
              "target_knowledge_id": {
                "description": "Field included by default.",
                "format": "uuid",
                "type": "string"
              }
            },
            "required": [
              "relation_type",
              "source_knowledge_id",
              "target_knowledge_id"
            ],
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "additionalProperties": false,
            "description": "A relationships object for a knowledge_relation",
            "properties": {
              "created_by": {
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "description": "An identifier for created_by",
                    "nullable": true,
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "meta": {
                        "additionalProperties": true,
                        "type": "object"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ],
                    "type": "object"
                  }
                }
              },
              "source_knowledge": {
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "description": "An identifier for source_knowledge",
                    "nullable": true,
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "meta": {
                        "additionalProperties": true,
                        "type": "object"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ],
                    "type": "object"
                  }
                }
              },
              "target_knowledge": {
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "description": "An identifier for target_knowledge",
                    "nullable": true,
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "meta": {
                        "additionalProperties": true,
                        "type": "object"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "id"
                    ],
                    "type": "object"
                  }
                }
              }
            },
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "id"
        ],
        "type": "object"
      },
      "course_enrollment-filter": {
        "additionalProperties": false,
        "description": "Filters the query to results matching the given filter object",
        "example": "",
        "properties": {
          "and": {
            "items": {
              "$ref": "#/components/schemas/course_enrollment-filter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "course_id": {
            "$ref": "#/components/schemas/course_enrollment-filter-course_id"
          },
          "enrolled_at": {
            "$ref": "#/components/schemas/course_enrollment-filter-enrolled_at"
          },
          "id": {
            "$ref": "#/components/schemas/course_enrollment-filter-id"
          },
          "not": {
            "$ref": "#/components/schemas/course_enrollment-filter"
          },
          "or": {
            "items": {
              "$ref": "#/components/schemas/course_enrollment-filter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "student_id": {
            "$ref": "#/components/schemas/course_enrollment-filter-student_id"
          }
        },
        "type": "deepObject"
      },
      "user-filter-email": {
        "additionalProperties": false,
        "properties": {
          "contains": {
            "type": "string"
          },
          "eq": {
            "type": "string"
          },
          "greater_than": {
            "type": "string"
          },
          "greater_than_or_equal": {
            "type": "string"
          },
          "in": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "type": "string"
          },
          "less_than_or_equal": {
            "type": "string"
          },
          "not_eq": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "knowledge_resource-filter-course_id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "knowledge_relation-filter-id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "knowledge_resource-filter-description": {
        "additionalProperties": false,
        "properties": {
          "contains": {
            "type": "string"
          },
          "eq": {
            "type": "string"
          },
          "greater_than": {
            "type": "string"
          },
          "greater_than_or_equal": {
            "type": "string"
          },
          "ilike": {
            "type": "string"
          },
          "in": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "type": "string"
          },
          "less_than_or_equal": {
            "type": "string"
          },
          "like": {
            "type": "string"
          },
          "not_eq": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "user": {
        "additionalProperties": false,
        "description": "A \"Resource object\" representing a user",
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "description": "An attributes object for a user",
            "properties": {
              "email": {
                "anyOf": [
                  {
                    "nullable": true,
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Field included by default."
              },
              "role": {
                "description": "Field included by default.",
                "enum": [
                  "admin",
                  "user",
                  "teacher"
                ],
                "type": "string"
              },
              "student_id": {
                "description": "Field included by default.",
                "type": "string"
              }
            },
            "required": [
              "student_id",
              "role"
            ],
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "relationships": {
            "additionalProperties": false,
            "description": "A relationships object for a user",
            "properties": {},
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "id"
        ],
        "type": "object"
      },
      "user-filter-role": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "enum": [
              "admin",
              "user",
              "teacher"
            ],
            "type": "string"
          },
          "greater_than": {
            "enum": [
              "admin",
              "user",
              "teacher"
            ],
            "type": "string"
          },
          "greater_than_or_equal": {
            "enum": [
              "admin",
              "user",
              "teacher"
            ],
            "type": "string"
          },
          "in": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "enum": [
              "admin",
              "user",
              "teacher"
            ],
            "type": "string"
          },
          "less_than_or_equal": {
            "enum": [
              "admin",
              "user",
              "teacher"
            ],
            "type": "string"
          },
          "not_eq": {
            "enum": [
              "admin",
              "user",
              "teacher"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "knowledge_resource-filter-id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "knowledge_relation-filter": {
        "additionalProperties": false,
        "description": "Filters the query to results matching the given filter object",
        "example": "",
        "properties": {
          "and": {
            "items": {
              "$ref": "#/components/schemas/knowledge_relation-filter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "created_by": {
            "$ref": "#/components/schemas/user-filter"
          },
          "created_by_id": {
            "$ref": "#/components/schemas/knowledge_relation-filter-created_by_id"
          },
          "id": {
            "$ref": "#/components/schemas/knowledge_relation-filter-id"
          },
          "not": {
            "$ref": "#/components/schemas/knowledge_relation-filter"
          },
          "or": {
            "items": {
              "$ref": "#/components/schemas/knowledge_relation-filter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "relation_type": {
            "$ref": "#/components/schemas/knowledge_relation-filter-relation_type"
          },
          "source_knowledge": {
            "$ref": "#/components/schemas/knowledge_resource-filter"
          },
          "source_knowledge_id": {
            "$ref": "#/components/schemas/knowledge_relation-filter-source_knowledge_id"
          },
          "target_knowledge": {
            "$ref": "#/components/schemas/knowledge_resource-filter"
          },
          "target_knowledge_id": {
            "$ref": "#/components/schemas/knowledge_relation-filter-target_knowledge_id"
          }
        },
        "type": "deepObject"
      },
      "error": {
        "additionalProperties": false,
        "properties": {
          "code": {
            "description": "An application-specific error code, expressed as a string value.",
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "type": "string"
          },
          "id": {
            "description": "A unique identifier for this particular occurrence of the problem.",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "source": {
            "properties": {
              "parameter": {
                "description": "A string indicating which query parameter caused the error.",
                "type": "string"
              },
              "pointer": {
                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
            "type": "string"
          },
          "title": {
            "description": "A short, human-readable summary of the problem. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "user-filter-student_id": {
        "additionalProperties": false,
        "properties": {
          "contains": {
            "type": "string"
          },
          "eq": {
            "type": "string"
          },
          "greater_than": {
            "type": "string"
          },
          "greater_than_or_equal": {
            "type": "string"
          },
          "ilike": {
            "type": "string"
          },
          "in": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "type": "string"
          },
          "less_than_or_equal": {
            "type": "string"
          },
          "like": {
            "type": "string"
          },
          "not_eq": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "knowledge_relation-filter-target_knowledge_id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "errors": {
        "items": {
          "$ref": "#/components/schemas/error"
        },
        "type": "array",
        "uniqueItems": true
      },
      "knowledge_resource-filter-created_by_id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "course-filter": {
        "additionalProperties": false,
        "description": "Filters the query to results matching the given filter object",
        "example": "",
        "properties": {
          "and": {
            "items": {
              "$ref": "#/components/schemas/course-filter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "description": {
            "$ref": "#/components/schemas/course-filter-description"
          },
          "id": {
            "$ref": "#/components/schemas/course-filter-id"
          },
          "not": {
            "$ref": "#/components/schemas/course-filter"
          },
          "or": {
            "items": {
              "$ref": "#/components/schemas/course-filter"
            },
            "type": "array",
            "uniqueItems": true
          },
          "teacher_id": {
            "$ref": "#/components/schemas/course-filter-teacher_id"
          },
          "title": {
            "$ref": "#/components/schemas/course-filter-title"
          }
        },
        "type": "deepObject"
      },
      "knowledge_relation-filter-created_by_id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "course-filter-id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "course_enrollment-filter-id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "course-filter-description": {
        "additionalProperties": false,
        "properties": {
          "contains": {
            "type": "string"
          },
          "eq": {
            "type": "string"
          },
          "greater_than": {
            "type": "string"
          },
          "greater_than_or_equal": {
            "type": "string"
          },
          "ilike": {
            "type": "string"
          },
          "in": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "type": "string"
          },
          "less_than_or_equal": {
            "type": "string"
          },
          "like": {
            "type": "string"
          },
          "not_eq": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "course_enrollment-filter-course_id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "knowledge_relation-filter-relation_type": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "enum": [
              "pre",
              "post",
              "related",
              "extends",
              "depends_on"
            ],
            "type": "string"
          },
          "greater_than": {
            "enum": [
              "pre",
              "post",
              "related",
              "extends",
              "depends_on"
            ],
            "type": "string"
          },
          "greater_than_or_equal": {
            "enum": [
              "pre",
              "post",
              "related",
              "extends",
              "depends_on"
            ],
            "type": "string"
          },
          "in": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "enum": [
              "pre",
              "post",
              "related",
              "extends",
              "depends_on"
            ],
            "type": "string"
          },
          "less_than_or_equal": {
            "enum": [
              "pre",
              "post",
              "related",
              "extends",
              "depends_on"
            ],
            "type": "string"
          },
          "not_eq": {
            "enum": [
              "pre",
              "post",
              "related",
              "extends",
              "depends_on"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "course-filter-teacher_id": {
        "additionalProperties": false,
        "properties": {
          "eq": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than": {
            "format": "uuid",
            "type": "string"
          },
          "greater_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "in": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "format": "uuid",
            "type": "string"
          },
          "less_than_or_equal": {
            "format": "uuid",
            "type": "string"
          },
          "not_eq": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "knowledge_resource-filter-name": {
        "additionalProperties": false,
        "properties": {
          "contains": {
            "type": "string"
          },
          "eq": {
            "type": "string"
          },
          "greater_than": {
            "type": "string"
          },
          "greater_than_or_equal": {
            "type": "string"
          },
          "ilike": {
            "type": "string"
          },
          "in": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_nil": {
            "type": "boolean"
          },
          "less_than": {
            "type": "string"
          },
          "less_than_or_equal": {
            "type": "string"
          },
          "like": {
            "type": "string"
          },
          "not_eq": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "description": "JWT for bearer authentication",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Open API Specification",
    "version": "1.1"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/json/course-enrollments": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "/course-enrollments operation on course_enrollment resource",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "course_enrollment": "id,course_id,student_id,enrolled_at"
              },
              "properties": {
                "course_enrollment": {
                  "description": "Comma separated field names for course_enrollment",
                  "example": "id,course_id,student_id,enrolled_at",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/course_enrollment"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "course_enrollment"
        ]
      },
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "/course-enrollments operation on course_enrollment resource",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "course_enrollment": "id,course_id,student_id,enrolled_at"
              },
              "properties": {
                "course_enrollment": {
                  "description": "Comma separated field names for course_enrollment",
                  "example": "id,course_id,student_id,enrolled_at",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {
                          "course_id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "student_id": {
                            "format": "uuid",
                            "type": "string"
                          }
                        },
                        "required": [
                          "course_id",
                          "student_id"
                        ],
                        "type": "object"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "course_enrollment"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /course-enrollments operation on course_enrollment resource",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/course_enrollment"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "course_enrollment"
        ]
      }
    },
    "/api/json/course-enrollments/course/{course_id}": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Get enrollments for a specific course",
        "parameters": [
          {
            "in": "path",
            "name": "course_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filters the query to results with attributes matching the given filter object",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/course_enrollment-filter"
            },
            "style": "deepObject"
          },
          {
            "description": "Sort order to apply to the results",
            "explode": false,
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "pattern": "^(id|-id|\\+\\+id|--id|course_id|-course_id|\\+\\+course_id|--course_id|student_id|-student_id|\\+\\+student_id|--student_id|enrolled_at|-enrolled_at|\\+\\+enrolled_at|--enrolled_at)(,(id|-id|\\+\\+id|--id|course_id|-course_id|\\+\\+course_id|--course_id|student_id|-student_id|\\+\\+student_id|--student_id|enrolled_at|-enrolled_at|\\+\\+enrolled_at|--enrolled_at))*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "course_enrollment": "id,course_id,student_id,enrolled_at"
              },
              "properties": {
                "course_enrollment": {
                  "description": "Comma separated field names for course_enrollment",
                  "example": "id,course_id,student_id,enrolled_at",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "description": "An array of resource objects representing a course_enrollment",
                      "items": {
                        "$ref": "#/components/schemas/course_enrollment"
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "course_enrollment"
        ]
      }
    },
    "/api/json/course-enrollments/student/{student_id}": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Get enrollments for a specific student",
        "parameters": [
          {
            "in": "path",
            "name": "student_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filters the query to results with attributes matching the given filter object",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/course_enrollment-filter"
            },
            "style": "deepObject"
          },
          {
            "description": "Sort order to apply to the results",
            "explode": false,
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "pattern": "^(id|-id|\\+\\+id|--id|course_id|-course_id|\\+\\+course_id|--course_id|student_id|-student_id|\\+\\+student_id|--student_id|enrolled_at|-enrolled_at|\\+\\+enrolled_at|--enrolled_at)(,(id|-id|\\+\\+id|--id|course_id|-course_id|\\+\\+course_id|--course_id|student_id|-student_id|\\+\\+student_id|--student_id|enrolled_at|-enrolled_at|\\+\\+enrolled_at|--enrolled_at))*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "course_enrollment": "id,course_id,student_id,enrolled_at"
              },
              "properties": {
                "course_enrollment": {
                  "description": "Comma separated field names for course_enrollment",
                  "example": "id,course_id,student_id,enrolled_at",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "description": "An array of resource objects representing a course_enrollment",
                      "items": {
                        "$ref": "#/components/schemas/course_enrollment"
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "course_enrollment"
        ]
      }
    },
    "/api/json/course-enrollments/{id}": {
      "delete": {
        "callbacks": {},
        "deprecated": false,
        "description": "/course-enrollments/:id operation on course_enrollment resource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "course_enrollment": "id,course_id,student_id,enrolled_at"
              },
              "properties": {
                "course_enrollment": {
                  "description": "Comma separated field names for course_enrollment",
                  "example": "id,course_id,student_id,enrolled_at",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "course_enrollment"
        ]
      }
    },
    "/api/json/courses": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "/courses operation on course resource",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "course": "id,title,description,teacher_id"
              },
              "properties": {
                "course": {
                  "description": "Comma separated field names for course",
                  "example": "id,title,description,teacher_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/course"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "course"
        ]
      },
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "/courses operation on course resource",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "course": "id,title,description,teacher_id"
              },
              "properties": {
                "course": {
                  "description": "Comma separated field names for course",
                  "example": "id,title,description,teacher_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {
                          "description": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "teacher_id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "title",
                          "teacher_id"
                        ],
                        "type": "object"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "course"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /courses operation on course resource",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/course"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "course"
        ]
      }
    },
    "/api/json/courses/student/{student_id}": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Get courses assigned to a specific student",
        "parameters": [
          {
            "in": "path",
            "name": "student_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filters the query to results with attributes matching the given filter object",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/course-filter"
            },
            "style": "deepObject"
          },
          {
            "description": "Sort order to apply to the results",
            "explode": false,
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "pattern": "^(id|-id|\\+\\+id|--id|title|-title|\\+\\+title|--title|description|-description|\\+\\+description|--description|teacher_id|-teacher_id|\\+\\+teacher_id|--teacher_id)(,(id|-id|\\+\\+id|--id|title|-title|\\+\\+title|--title|description|-description|\\+\\+description|--description|teacher_id|-teacher_id|\\+\\+teacher_id|--teacher_id))*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "course": "id,title,description,teacher_id"
              },
              "properties": {
                "course": {
                  "description": "Comma separated field names for course",
                  "example": "id,title,description,teacher_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "description": "An array of resource objects representing a course",
                      "items": {
                        "$ref": "#/components/schemas/course"
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "course"
        ]
      }
    },
    "/api/json/courses/teacher/{teacher_id}": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Get courses taught by a specific teacher",
        "parameters": [
          {
            "in": "path",
            "name": "teacher_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filters the query to results with attributes matching the given filter object",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/course-filter"
            },
            "style": "deepObject"
          },
          {
            "description": "Sort order to apply to the results",
            "explode": false,
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "pattern": "^(id|-id|\\+\\+id|--id|title|-title|\\+\\+title|--title|description|-description|\\+\\+description|--description|teacher_id|-teacher_id|\\+\\+teacher_id|--teacher_id)(,(id|-id|\\+\\+id|--id|title|-title|\\+\\+title|--title|description|-description|\\+\\+description|--description|teacher_id|-teacher_id|\\+\\+teacher_id|--teacher_id))*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "course": "id,title,description,teacher_id"
              },
              "properties": {
                "course": {
                  "description": "Comma separated field names for course",
                  "example": "id,title,description,teacher_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "description": "An array of resource objects representing a course",
                      "items": {
                        "$ref": "#/components/schemas/course"
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "course"
        ]
      }
    },
    "/api/json/courses/{id}": {
      "delete": {
        "callbacks": {},
        "deprecated": false,
        "description": "/courses/:id operation on course resource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "course": "id,title,description,teacher_id"
              },
              "properties": {
                "course": {
                  "description": "Comma separated field names for course",
                  "example": "id,title,description,teacher_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "course"
        ]
      },
      "patch": {
        "callbacks": {},
        "deprecated": false,
        "description": "/courses/:id operation on course resource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "course": "id,title,description,teacher_id"
              },
              "properties": {
                "course": {
                  "description": "Comma separated field names for course",
                  "example": "id,title,description,teacher_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "id": {
                        "type": "string"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "course"
                        ]
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /courses/:id operation on course resource",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/course"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "course"
        ]
      }
    },
    "/api/json/knowledge-relations": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "/knowledge-relations operation on knowledge_relation resource",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "knowledge_relation": "id,relation_type,source_knowledge_id,target_knowledge_id,created_by_id"
              },
              "properties": {
                "knowledge_relation": {
                  "description": "Comma separated field names for knowledge_relation",
                  "example": "id,relation_type,source_knowledge_id,target_knowledge_id,created_by_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/knowledge_relation"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "knowledge_relation"
        ]
      },
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "/knowledge-relations operation on knowledge_relation resource",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "knowledge_relation": "id,relation_type,source_knowledge_id,target_knowledge_id,created_by_id"
              },
              "properties": {
                "knowledge_relation": {
                  "description": "Comma separated field names for knowledge_relation",
                  "example": "id,relation_type,source_knowledge_id,target_knowledge_id,created_by_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "knowledge_relation"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /knowledge-relations operation on knowledge_relation resource",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/knowledge_relation"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "knowledge_relation"
        ]
      }
    },
    "/api/json/knowledge-relations/{id}": {
      "delete": {
        "callbacks": {},
        "deprecated": false,
        "description": "/knowledge-relations/:id operation on knowledge_relation resource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "knowledge_relation": "id,relation_type,source_knowledge_id,target_knowledge_id,created_by_id"
              },
              "properties": {
                "knowledge_relation": {
                  "description": "Comma separated field names for knowledge_relation",
                  "example": "id,relation_type,source_knowledge_id,target_knowledge_id,created_by_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "knowledge_relation"
        ]
      },
      "patch": {
        "callbacks": {},
        "deprecated": false,
        "description": "/knowledge-relations/:id operation on knowledge_relation resource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "knowledge_relation": "id,relation_type,source_knowledge_id,target_knowledge_id,created_by_id"
              },
              "properties": {
                "knowledge_relation": {
                  "description": "Comma separated field names for knowledge_relation",
                  "example": "id,relation_type,source_knowledge_id,target_knowledge_id,created_by_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "id": {
                        "type": "string"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "knowledge_relation"
                        ]
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /knowledge-relations/:id operation on knowledge_relation resource",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/knowledge_relation"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "knowledge_relation"
        ]
      }
    },
    "/api/json/knowledge-resources": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "/knowledge-resources operation on knowledge_resource resource",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "knowledge_resource": "id,name,description,course_id,created_by_id"
              },
              "properties": {
                "knowledge_resource": {
                  "description": "Comma separated field names for knowledge_resource",
                  "example": "id,name,description,course_id,created_by_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/knowledge_resource"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "knowledge_resource"
        ]
      },
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "/knowledge-resources operation on knowledge_resource resource",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "knowledge_resource": "id,name,description,course_id,created_by_id"
              },
              "properties": {
                "knowledge_resource": {
                  "description": "Comma separated field names for knowledge_resource",
                  "example": "id,name,description,course_id,created_by_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "knowledge_resource"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /knowledge-resources operation on knowledge_resource resource",
          "required": false
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/knowledge_resource"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "knowledge_resource"
        ]
      }
    },
    "/api/json/knowledge-resources/course/{course_id}": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Get knowledge resources for a specific course",
        "parameters": [
          {
            "in": "path",
            "name": "course_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Filters the query to results with attributes matching the given filter object",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/knowledge_resource-filter"
            },
            "style": "deepObject"
          },
          {
            "description": "Sort order to apply to the results",
            "explode": false,
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "pattern": "^(id|-id|\\+\\+id|--id|name|-name|\\+\\+name|--name|description|-description|\\+\\+description|--description|course_id|-course_id|\\+\\+course_id|--course_id|created_by_id|-created_by_id|\\+\\+created_by_id|--created_by_id)(,(id|-id|\\+\\+id|--id|name|-name|\\+\\+name|--name|description|-description|\\+\\+description|--description|course_id|-course_id|\\+\\+course_id|--course_id|created_by_id|-created_by_id|\\+\\+created_by_id|--created_by_id))*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "knowledge_resource": "id,name,description,course_id,created_by_id"
              },
              "properties": {
                "knowledge_resource": {
                  "description": "Comma separated field names for knowledge_resource",
                  "example": "id,name,description,course_id,created_by_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "description": "An array of resource objects representing a knowledge_resource",
                      "items": {
                        "$ref": "#/components/schemas/knowledge_resource"
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "knowledge_resource"
        ]
      }
    },
    "/api/json/knowledge-resources/{id}": {
      "delete": {
        "callbacks": {},
        "deprecated": false,
        "description": "/knowledge-resources/:id operation on knowledge_resource resource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "knowledge_resource": "id,name,description,course_id,created_by_id"
              },
              "properties": {
                "knowledge_resource": {
                  "description": "Comma separated field names for knowledge_resource",
                  "example": "id,name,description,course_id,created_by_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "knowledge_resource"
        ]
      },
      "patch": {
        "callbacks": {},
        "deprecated": false,
        "description": "/knowledge-resources/:id operation on knowledge_resource resource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "knowledge_resource": "id,name,description,course_id,created_by_id"
              },
              "properties": {
                "knowledge_resource": {
                  "description": "Comma separated field names for knowledge_resource",
                  "example": "id,name,description,course_id,created_by_id",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "id": {
                        "type": "string"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "knowledge_resource"
                        ]
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /knowledge-resources/:id operation on knowledge_resource resource",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/knowledge_resource"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "knowledge_resource"
        ]
      }
    },
    "/api/json/users": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Get all users",
        "parameters": [
          {
            "description": "Filters the query to results with attributes matching the given filter object",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/user-filter"
            },
            "style": "deepObject"
          },
          {
            "description": "Sort order to apply to the results",
            "explode": false,
            "in": "query",
            "name": "sort",
            "required": false,
            "schema": {
              "pattern": "^(id|-id|\\+\\+id|--id|student_id|-student_id|\\+\\+student_id|--student_id|email|-email|\\+\\+email|--email|role|-role|\\+\\+role|--role)(,(id|-id|\\+\\+id|--id|student_id|-student_id|\\+\\+student_id|--student_id|email|-email|\\+\\+email|--email|role|-role|\\+\\+role|--role))*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "user": "id,student_id,email,role"
              },
              "properties": {
                "user": {
                  "description": "Comma separated field names for user",
                  "example": "id,student_id,email,role",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "description": "An array of resource objects representing a user",
                      "items": {
                        "$ref": "#/components/schemas/user"
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/api/json/users/change-password": {
      "patch": {
        "callbacks": {},
        "deprecated": false,
        "description": "/users/change-password operation on user resource",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "user": "id,student_id,email,role"
              },
              "properties": {
                "user": {
                  "description": "Comma separated field names for user",
                  "example": "id,student_id,email,role",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {
                          "current_password": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          },
                          "password_confirmation": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "current_password",
                          "password",
                          "password_confirmation"
                        ],
                        "type": "object"
                      },
                      "id": {
                        "type": "string"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "user"
                        ]
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /users/change-password operation on user resource",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/api/json/users/me": {
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Get the current authenticated user",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "user": "id,student_id,email,role"
              },
              "properties": {
                "user": {
                  "description": "Comma separated field names for user",
                  "example": "id,student_id,email,role",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/api/json/users/register": {
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "Register a new user with a student ID and password.",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "user": "id,student_id,email,role"
              },
              "properties": {
                "user": {
                  "description": "Comma separated field names for user",
                  "example": "id,student_id,email,role",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {
                          "password": {
                            "description": "The proposed password for the user, in plain text.",
                            "type": "string"
                          },
                          "password_confirmation": {
                            "description": "The proposed password for the user (again), in plain text.",
                            "type": "string"
                          },
                          "role": {
                            "anyOf": [
                              {
                                "enum": [
                                  "admin",
                                  "user",
                                  "teacher"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "The role of the user (admin, user, teacher). Defaults to :user."
                          },
                          "student_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "student_id",
                          "password",
                          "password_confirmation"
                        ],
                        "type": "object"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "user"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /users/register operation on user resource",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/api/json/users/reset-password": {
      "patch": {
        "callbacks": {},
        "deprecated": false,
        "description": "/users/reset-password operation on user resource",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "user": "id,student_id,email,role"
              },
              "properties": {
                "user": {
                  "description": "Comma separated field names for user",
                  "example": "id,student_id,email,role",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {
                          "password": {
                            "description": "The proposed password for the user, in plain text.",
                            "type": "string"
                          },
                          "password_confirmation": {
                            "description": "The proposed password for the user (again), in plain text.",
                            "type": "string"
                          },
                          "reset_token": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "reset_token",
                          "password",
                          "password_confirmation"
                        ],
                        "type": "object"
                      },
                      "id": {
                        "type": "string"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "user"
                        ]
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /users/reset-password operation on user resource",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/api/json/users/sign-in": {
      "post": {
        "callbacks": {},
        "deprecated": false,
        "description": "Attempt to sign in using a student ID and password.",
        "parameters": [
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "user": "id,student_id,email,role"
              },
              "properties": {
                "user": {
                  "description": "Comma separated field names for user",
                  "example": "id,student_id,email,role",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {
                          "password": {
                            "description": "The password to check for the matching user.",
                            "type": "string"
                          },
                          "student_id": {
                            "description": "The student ID to use for retrieving the user.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "student_id",
                          "password"
                        ],
                        "type": "object"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "user"
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /users/sign-in operation on user resource",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/api/json/users/{id}": {
      "delete": {
        "callbacks": {},
        "deprecated": false,
        "description": "/users/:id operation on user resource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "user": "id,student_id,email,role"
              },
              "properties": {
                "user": {
                  "description": "Comma separated field names for user",
                  "example": "id,student_id,email,role",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted successfully"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "user"
        ]
      },
      "get": {
        "callbacks": {},
        "deprecated": false,
        "description": "Get a user by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "user": "id,student_id,email,role"
              },
              "properties": {
                "user": {
                  "description": "Comma separated field names for user",
                  "example": "id,student_id,email,role",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "user"
        ]
      },
      "patch": {
        "callbacks": {},
        "deprecated": false,
        "description": "/users/:id operation on user resource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Relationship paths to include in the response",
            "explode": false,
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "pattern": "^()(,())*$",
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Limits the response fields to only those listed for each type",
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "additionalProperties": true,
              "example": {
                "user": "id,student_id,email,role"
              },
              "properties": {
                "user": {
                  "description": "Comma separated field names for user",
                  "example": "id,student_id,email,role",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "data": {
                    "additionalProperties": false,
                    "properties": {
                      "attributes": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "id": {
                        "type": "string"
                      },
                      "relationships": {
                        "additionalProperties": false,
                        "properties": {},
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "user"
                        ]
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            }
          },
          "description": "Request body for the /users/:id operation on user resource",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/user"
                    },
                    "included": {
                      "items": {
                        "oneOf": []
                      },
                      "type": "array",
                      "uniqueItems": true
                    },
                    "meta": {
                      "additionalProperties": true,
                      "type": "object"
                    }
                  }
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "$ref": "#/components/responses/errors"
          }
        },
        "tags": [
          "user"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "http://localhost:4000",
      "variables": {}
    }
  ],
  "tags": []
}