import Config
config :ash, policies: [show_policy_breakdowns?: true]

config :mux,
  access_token_id: System.get_env("MUX_TOKEN_ID") || "5d03c8ed-21f9-452f-9d9f-5cc28d93b6a5",
  access_token_secret: System.get_env("MUX_TOKEN_SECRET") || "/TeA9kOSZGHNiQybPSKNBatuNekN4nGKnadGVm12m6KDL+bHjnnDmPr8YBaoNX9WhTG0LtmyaTa"

# Configure your database
config :kg_edu, KgEdu.Repo,
  username: "postgres",
  password: "postgres",
  hostname: "localhost",
  database: "kg_edu_dev",
  port: 5433,
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :kg_edu, KgEduWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: String.to_integer(System.get_env("PORT") || "4000")],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "b9DjqcxcEmyvs0IowPGK9w75+Z+77XzwAy15W4+I2a8fZ+W+SAdOyHcyxQrs7MZt",
  watchers: [
    esbuild: {Esbuild, :install_and_run, [:kg_edu, ~w(--sourcemap=inline --watch)]},
    tailwind: {Tailwind, :install_and_run, [:kg_edu, ~w(--watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :kg_edu, KgEduWeb.Endpoint,
  live_reload: [
    web_console_logger: true,
    patterns: [
      ~r"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/kg_edu_web/(?:controllers|live|components|router)/?.*\.(ex|heex)$"
    ]
  ]

# Enable dev routes for dashboard and mailbox
config :kg_edu, dev_routes: true, token_signing_secret: "Ssc1SLur47timAqjrYVr5Rcmy56lEBFF"

# Do not include metadata nor timestamps in development logs
config :logger, :default_formatter, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :phoenix_live_view,
  # Include debug annotations and locations in rendered markup.
  # Changing this configuration will require mix clean and a full recompile.
  debug_heex_annotations: true,
  debug_tags_location: true,
  # Enable helpful, but potentially expensive runtime checks
  enable_expensive_runtime_checks: true

# Disable swoosh api client as it is only required for production adapters.
config :swoosh, :api_client, false

# Development ReqLLM configuration with fallback
config :kg_edu, :reqllm,
  api_key: System.get_env("OPENROUTER_API_KEY") || "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",
  model: "openrouter:z-ai/glm-4.5"
