defmodule KgEdu.Repo.Migrations.AddChapterResource do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:knowledge_resources) do
      add :chapter_id, :uuid
    end

    create table(:chapters, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:knowledge_resources) do
      modify :chapter_id,
             references(:chapters,
               column: :id,
               name: "knowledge_resources_chapter_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:chapters) do
      add :title, :text, null: false
      add :description, :text
      add :sort_order, :bigint, default: 0

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :course_id,
          references(:courses,
            column: :id,
            name: "chapters_course_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :parent_chapter_id,
          references(:chapters,
            column: :id,
            name: "chapters_parent_chapter_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    create unique_index(:chapters, [:title, :course_id, :parent_chapter_id],
             name: "chapters_unique_title_per_course_parent_index"
           )
  end

  def down do
    drop_if_exists unique_index(:chapters, [:title, :course_id, :parent_chapter_id],
                     name: "chapters_unique_title_per_course_parent_index"
                   )

    drop constraint(:chapters, "chapters_course_id_fkey")

    drop constraint(:chapters, "chapters_parent_chapter_id_fkey")

    alter table(:chapters) do
      remove :parent_chapter_id
      remove :course_id
      remove :updated_at
      remove :inserted_at
      remove :sort_order
      remove :description
      remove :title
    end

    drop constraint(:knowledge_resources, "knowledge_resources_chapter_id_fkey")

    alter table(:knowledge_resources) do
      modify :chapter_id, :uuid
    end

    drop table(:chapters)

    alter table(:knowledge_resources) do
      remove :chapter_id
    end
  end
end
