defmodule KgEdu.Repo.Migrations.AddQuestions do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:knowledge_questions, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :title, :text, null: false
      add :description, :text
      add :question_level, :text, null: false
      add :position, :bigint, null: false, default: 0
      add :tags, {:array, :text}, default: []
      add :style_config, :map

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :course_id,
          references(:courses,
            column: :id,
            name: "knowledge_questions_course_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :created_by_id,
          references(:users,
            column: :id,
            name: "knowledge_questions_created_by_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :knowledge_resource_id,
          references(:knowledge_resources,
            column: :id,
            name: "knowledge_questions_knowledge_resource_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    create unique_index(:knowledge_questions, [:title, :question_level, :course_id],
             name: "knowledge_questions_unique_title_position_per_level_index"
           )

    create table(:knowledge_question_connections, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :connection_type, :text, default: "hierarchy"
      add :style_config, :map

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :course_id,
          references(:courses,
            column: :id,
            name: "knowledge_question_connections_course_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :source_question_id,
          references(:knowledge_questions,
            column: :id,
            name: "knowledge_question_connections_source_question_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :target_question_id,
          references(:knowledge_questions,
            column: :id,
            name: "knowledge_question_connections_target_question_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create unique_index(
             :knowledge_question_connections,
             [:source_question_id, :target_question_id],
             name: "knowledge_question_connections_unique_connection_index"
           )
  end

  def down do
    drop_if_exists unique_index(
                     :knowledge_question_connections,
                     [:source_question_id, :target_question_id],
                     name: "knowledge_question_connections_unique_connection_index"
                   )

    drop constraint(
           :knowledge_question_connections,
           "knowledge_question_connections_course_id_fkey"
         )

    drop constraint(
           :knowledge_question_connections,
           "knowledge_question_connections_source_question_id_fkey"
         )

    drop constraint(
           :knowledge_question_connections,
           "knowledge_question_connections_target_question_id_fkey"
         )

    drop table(:knowledge_question_connections)

    drop_if_exists unique_index(:knowledge_questions, [:title, :question_level, :course_id],
                     name: "knowledge_questions_unique_title_position_per_level_index"
                   )

    drop constraint(:knowledge_questions, "knowledge_questions_course_id_fkey")

    drop constraint(:knowledge_questions, "knowledge_questions_created_by_id_fkey")

    drop constraint(:knowledge_questions, "knowledge_questions_knowledge_resource_id_fkey")

    drop table(:knowledge_questions)
  end
end
