// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetApiJsonCourseEnrollmentsData, GetApiJsonCourseEnrollmentsResponses, GetApiJsonCourseEnrollmentsErrors, PostApiJsonCourseEnrollmentsData, PostApiJsonCourseEnrollmentsResponses, PostApiJsonCourseEnrollmentsErrors, GetApiJsonCourseEnrollmentsCourseByCourseIdData, GetApiJsonCourseEnrollmentsCourseByCourseIdResponses, GetApiJsonCourseEnrollmentsCourseByCourseIdErrors, GetApiJsonCourseEnrollmentsStudentByStudentIdData, GetApiJsonCourseEnrollmentsStudentByStudentIdResponses, GetApiJsonCourseEnrollmentsStudentByStudentIdErrors, DeleteApiJsonCourseEnrollmentsByIdData, DeleteApiJsonCourseEnrollmentsByIdResponses, DeleteApiJsonCourseEnrollmentsByIdErrors, GetApiJsonCoursesData, GetApiJsonCoursesResponses, GetApiJsonCoursesErrors, PostApiJsonCoursesData, PostApiJsonCoursesResponses, PostApiJsonCoursesErrors, GetApiJsonCoursesStudentByStudentIdData, GetApiJsonCoursesStudentByStudentIdResponses, GetApiJsonCoursesStudentByStudentIdErrors, GetApiJsonCoursesTeacherByTeacherIdData, GetApiJsonCoursesTeacherByTeacherIdResponses, GetApiJsonCoursesTeacherByTeacherIdErrors, DeleteApiJsonCoursesByIdData, DeleteApiJsonCoursesByIdResponses, DeleteApiJsonCoursesByIdErrors, PatchApiJsonCoursesByIdData, PatchApiJsonCoursesByIdResponses, PatchApiJsonCoursesByIdErrors, GetApiJsonUsersData, GetApiJsonUsersResponses, GetApiJsonUsersErrors, PatchApiJsonUsersChangePasswordData, PatchApiJsonUsersChangePasswordResponses, PatchApiJsonUsersChangePasswordErrors, GetApiJsonUsersMeData, GetApiJsonUsersMeResponses, GetApiJsonUsersMeErrors, PostApiJsonUsersRegisterData, PostApiJsonUsersRegisterResponses, PostApiJsonUsersRegisterErrors, PatchApiJsonUsersResetPasswordData, PatchApiJsonUsersResetPasswordResponses, PatchApiJsonUsersResetPasswordErrors, PostApiJsonUsersSignInData, PostApiJsonUsersSignInResponses, PostApiJsonUsersSignInErrors, DeleteApiJsonUsersByIdData, DeleteApiJsonUsersByIdResponses, DeleteApiJsonUsersByIdErrors, GetApiJsonUsersByIdData, GetApiJsonUsersByIdResponses, GetApiJsonUsersByIdErrors, PatchApiJsonUsersByIdData, PatchApiJsonUsersByIdResponses, PatchApiJsonUsersByIdErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * /course-enrollments operation on course_enrollment resource
 */
export const getApiJsonCourseEnrollments = <ThrowOnError extends boolean = false>(options?: Options<GetApiJsonCourseEnrollmentsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiJsonCourseEnrollmentsResponses, GetApiJsonCourseEnrollmentsErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/course-enrollments',
        ...options
    });
};

/**
 * /course-enrollments operation on course_enrollment resource
 */
export const postApiJsonCourseEnrollments = <ThrowOnError extends boolean = false>(options: Options<PostApiJsonCourseEnrollmentsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiJsonCourseEnrollmentsResponses, PostApiJsonCourseEnrollmentsErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/course-enrollments',
        ...options,
        headers: {
            'Content-Type': 'application/vnd.api+json',
            ...options.headers
        }
    });
};

/**
 * Get enrollments for a specific course
 */
export const getApiJsonCourseEnrollmentsCourseByCourseId = <ThrowOnError extends boolean = false>(options: Options<GetApiJsonCourseEnrollmentsCourseByCourseIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiJsonCourseEnrollmentsCourseByCourseIdResponses, GetApiJsonCourseEnrollmentsCourseByCourseIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/course-enrollments/course/{course_id}',
        ...options
    });
};

/**
 * Get enrollments for a specific student
 */
export const getApiJsonCourseEnrollmentsStudentByStudentId = <ThrowOnError extends boolean = false>(options: Options<GetApiJsonCourseEnrollmentsStudentByStudentIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiJsonCourseEnrollmentsStudentByStudentIdResponses, GetApiJsonCourseEnrollmentsStudentByStudentIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/course-enrollments/student/{student_id}',
        ...options
    });
};

/**
 * /course-enrollments/:id operation on course_enrollment resource
 */
export const deleteApiJsonCourseEnrollmentsById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiJsonCourseEnrollmentsByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiJsonCourseEnrollmentsByIdResponses, DeleteApiJsonCourseEnrollmentsByIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/course-enrollments/{id}',
        ...options
    });
};

/**
 * /courses operation on course resource
 */
export const getApiJsonCourses = <ThrowOnError extends boolean = false>(options?: Options<GetApiJsonCoursesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiJsonCoursesResponses, GetApiJsonCoursesErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/courses',
        ...options
    });
};

/**
 * /courses operation on course resource
 */
export const postApiJsonCourses = <ThrowOnError extends boolean = false>(options: Options<PostApiJsonCoursesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiJsonCoursesResponses, PostApiJsonCoursesErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/courses',
        ...options,
        headers: {
            'Content-Type': 'application/vnd.api+json',
            ...options.headers
        }
    });
};

/**
 * Get courses assigned to a specific student
 */
export const getApiJsonCoursesStudentByStudentId = <ThrowOnError extends boolean = false>(options: Options<GetApiJsonCoursesStudentByStudentIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiJsonCoursesStudentByStudentIdResponses, GetApiJsonCoursesStudentByStudentIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/courses/student/{student_id}',
        ...options
    });
};

/**
 * Get courses taught by a specific teacher
 */
export const getApiJsonCoursesTeacherByTeacherId = <ThrowOnError extends boolean = false>(options: Options<GetApiJsonCoursesTeacherByTeacherIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiJsonCoursesTeacherByTeacherIdResponses, GetApiJsonCoursesTeacherByTeacherIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/courses/teacher/{teacher_id}',
        ...options
    });
};

/**
 * /courses/:id operation on course resource
 */
export const deleteApiJsonCoursesById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiJsonCoursesByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiJsonCoursesByIdResponses, DeleteApiJsonCoursesByIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/courses/{id}',
        ...options
    });
};

/**
 * /courses/:id operation on course resource
 */
export const patchApiJsonCoursesById = <ThrowOnError extends boolean = false>(options: Options<PatchApiJsonCoursesByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchApiJsonCoursesByIdResponses, PatchApiJsonCoursesByIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/courses/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/vnd.api+json',
            ...options.headers
        }
    });
};

/**
 * Get all users
 */
export const getApiJsonUsers = <ThrowOnError extends boolean = false>(options?: Options<GetApiJsonUsersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiJsonUsersResponses, GetApiJsonUsersErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/users',
        ...options
    });
};

/**
 * /users/change-password operation on user resource
 */
export const patchApiJsonUsersChangePassword = <ThrowOnError extends boolean = false>(options: Options<PatchApiJsonUsersChangePasswordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchApiJsonUsersChangePasswordResponses, PatchApiJsonUsersChangePasswordErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/users/change-password',
        ...options,
        headers: {
            'Content-Type': 'application/vnd.api+json',
            ...options.headers
        }
    });
};

/**
 * Get the current authenticated user
 */
export const getApiJsonUsersMe = <ThrowOnError extends boolean = false>(options?: Options<GetApiJsonUsersMeData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetApiJsonUsersMeResponses, GetApiJsonUsersMeErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/users/me',
        ...options
    });
};

/**
 * Register a new user with a student ID and password.
 */
export const postApiJsonUsersRegister = <ThrowOnError extends boolean = false>(options: Options<PostApiJsonUsersRegisterData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiJsonUsersRegisterResponses, PostApiJsonUsersRegisterErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/users/register',
        ...options,
        headers: {
            'Content-Type': 'application/vnd.api+json',
            ...options.headers
        }
    });
};

/**
 * /users/reset-password operation on user resource
 */
export const patchApiJsonUsersResetPassword = <ThrowOnError extends boolean = false>(options: Options<PatchApiJsonUsersResetPasswordData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchApiJsonUsersResetPasswordResponses, PatchApiJsonUsersResetPasswordErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/users/reset-password',
        ...options,
        headers: {
            'Content-Type': 'application/vnd.api+json',
            ...options.headers
        }
    });
};

/**
 * Attempt to sign in using a student ID and password.
 */
export const postApiJsonUsersSignIn = <ThrowOnError extends boolean = false>(options: Options<PostApiJsonUsersSignInData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiJsonUsersSignInResponses, PostApiJsonUsersSignInErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/users/sign-in',
        ...options,
        headers: {
            'Content-Type': 'application/vnd.api+json',
            ...options.headers
        }
    });
};

/**
 * /users/:id operation on user resource
 */
export const deleteApiJsonUsersById = <ThrowOnError extends boolean = false>(options: Options<DeleteApiJsonUsersByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiJsonUsersByIdResponses, DeleteApiJsonUsersByIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/users/{id}',
        ...options
    });
};

/**
 * Get a user by ID
 */
export const getApiJsonUsersById = <ThrowOnError extends boolean = false>(options: Options<GetApiJsonUsersByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiJsonUsersByIdResponses, GetApiJsonUsersByIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/users/{id}',
        ...options
    });
};

/**
 * /users/:id operation on user resource
 */
export const patchApiJsonUsersById = <ThrowOnError extends boolean = false>(options: Options<PatchApiJsonUsersByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchApiJsonUsersByIdResponses, PatchApiJsonUsersByIdErrors, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/json/users/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/vnd.api+json',
            ...options.headers
        }
    });
};